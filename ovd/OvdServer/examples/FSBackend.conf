[main]
# list of path involved in the union
# separator must be ','.
# each value imply a dedicated section
union = real

# authorize the mount on no empty directory.
# the can be mountbind
bind = false

# destination of the mount bind
# it can be a path or a section (start with @)
bindDestination = @locale

[log]
level = INFO
program = RegularUnionFS
enableDevelOutput = true
enableStdOutput = true
#outputFilename = ""


# Union list
# each section represent one union destination
# each section can contain:
#  -path represent the path where is redirected content.
#       it can be specified as absolute or relative path
#  -accept represent regular expression of accepted path
#  -reject represent regular expression of rejected path
# a union can have many accept / reject directive but
# one path

[real]
# represent files involved in the configuration
# path => path to add
path = ""

# accept => path pattern accepted
accept = ""

# reject => path pattern rejected
reject = ""


