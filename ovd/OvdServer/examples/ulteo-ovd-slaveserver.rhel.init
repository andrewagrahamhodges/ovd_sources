#!/bin/sh

# Copyright (C) 2008-2013 Ulteo SAS
# http://www.ulteo.com
# Author Gauvain POCENTEK <gauvain@ulteo.com> 2008
# Author Julien LANGLOIS <julien@ulteo.com> 2008, 2010, 2013
# Author Samuel BOVEE <samuel@ulteo.com> 2010-2011
# Author Laurent CLOUET <laurent@ulteo.com> 2011
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; version 2
# of the License
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

### BEGIN INIT INFO
# Provides:          ulteo-ovd-slaveserver
# Required-Start:    $network
# Required-Stop:     $network
# Should-Start:      xrdp
# Should-Stop:       xrdp
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Ulteo OVD slave server
# Description:       Start Ulteo OVD slave server
### END INIT INFO

NAME="Ulteo OVD SlaveServer"
PROGRAM=ulteo-ovd-slaveserver
PIDFILE=/var/run/ovd-slaveserver.pid

# Source function library.
. /etc/init.d/functions

do_start () {
	echo -n "Starting $NAME"
	status -p "$PIDFILE" $PROGRAM >/dev/null 2>&1
	RET=$?
	if [ $RET -ne 1 ] && [ $RET -ne 3 ]; then
		FAILED=1
		echo -e -n "\t(is already running)"
		warning
		echo
		return 1
	fi
	
	daemon $PROGRAM --daemonize --pid-file="$PIDFILE"
	echo
}

do_stop () {
	echo -n "Stopping $NAME"
	killproc -t 100000 -p "$PIDFILE" $PROGRAM
	echo
}

do_force_stop() {
	echo -n "Force stopping $NAME"
	killproc -t 10 -p "$PIDFILE" $PROGRAM
	echo
}


if [ -r /etc/profile.d/lang.sh ]; then
	. /etc/profile.d/lang.sh
	export LANG=$LANG
	export LC_ALL=$LANG
fi

case $1 in
	start)
		do_start
	;;

	stop)
		do_stop
	;;

	force-stop)
		do_force_stop
	;;

	restart|force-reload)
		echo "Restarting $NAME"
		do_stop
		sleep 0.2
		do_start
	;;

	status)
		status -p "$PIDFILE" $PROGRAM
	;;

	*)
		echo "Usage: $0 {start|stop|force-stop|force-reload|restart|status}"
		exit 2
	;;
esac

exit $?
