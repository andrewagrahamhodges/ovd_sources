[main]
# list of path involved in the union
# separator must be ','.
# each value imply a dedicated section
union = configuration, data, volatile

# manage transformation due to session language
[translation]
Desktop = "%{CSIDL_DESKTOP}"
Documents= "%{CSIDL_PERSONAL}"
CSIDL_APPDATA = "AppData\Roaming"
CSIDL_LOCAL_APPDATA = "AppData\Local"
CSIDL_TEMPLATES = "%{CSIDL_TEMPLATES}"

[log]
level = INFO
enableDevelOutput = false
enableStdOutput = false
#outputFilename = "%{CSIDL_APPDATA}\${USERNAME}\test"

# Rules list
# list of path redirection 
# union_name => "regex path pattern accepted"
[rules]
volatile = "${TEMP}\.*"
volatile = "${USERPROFILE}"
volatile = "${USERPROFILE}\WINDOWS\.*"
volatile = "%{CSIDL_STARTMENU}\.*"
volatile = "%{CSIDL_INTERNET_CACHE}.*"
configuration = "%{CSIDL_TEMPLATES}.*"
configuration = "AppData.*"
volatile = "%{CSIDL_DESKTOP}\.*lnk"
volatile = "%{CSIDL_DESKTOP}\.*ini"
configuration = "%{CSIDL_FAVORITES}.*"

# Last rule to keep files
data = ".*"


# Union list
# each section represent one union destination
# each section can contain:
#  -path:          Represent the path where is redirected content.
#                   It can be specified as absolute or relative path
#  -rsync:         Represent the path involved in the data synchronization
#                   of the initial 'path' content
#  -rsync_filter:  Represent the filter apply to the rsync command
#  -deleteOnEnd:   Define if the directory is removed at the session end
# a union can have many reject directive but one path

[configuration]
# represent files involved in the configuration
#

# path => path to add
path = "%{CSIDL_COMMON_APPDATA}\ulteo\profile\${USERNAME}"

# data of the path is inited using the the following source
rsync = "conf.Windows.${UOS_VERSION}"

rsync_filter = "%{CSIDL_COMMON_APPDATA}\ulteo\ovd\profiles_filter.conf"

deleteOnEnd = true

# define directory to create in the repository
populate = "CSIDL_APPDATA; CSIDL_LOCAL_APPDATA; CSIDL_APPDATA\Microsoft\Windows\Libraries"


[data]
# represent user data
#

# path => path to add
path = Data

# define directory to create in the repository
populate = "Desktop; Documents"


[volatile]
path = "${USERPROFILE}"
translate = false
