[main]
# list of path involved in the union
# separator must be ','.
# each value imply a dedicated section
umask = 007
union = real

# specify the location of the file which contain pid of the rufs driver
# If the parameter is absent, the pid is not saved
pidFile = /tmp/FSBackend.pid

# file which contain informations about share:
#  * quota
#  * activate or not
# this file is reloaded each signal SIGHUP
sharesList = "/etc/ulteo/rufs/shares.conf"
sharesQuotaGrace = 10K


[log]
level = INFO
program = RegularUnionFS
enableDevelOutput = true
enableStdOutput = true
outputFilename = "/tmp/FSBackend.log"


# Union list
# each section represent one union destination
# each section can contain:
#  -path represent the path where is redirected content.
#       it can be specified as absolute or relative path
#  -accept represent regular expression of accepted path

[real]
# represent files involved in the configuration
#

# path => path to add
path = ""

# accept => path pattern accepted
accept = ""

