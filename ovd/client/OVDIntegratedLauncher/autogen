#! /usr/bin/python
# -*- coding: UTF-8 -*-

# Copyright (C) 2010-2013 Ulteo SAS
# http://www.ulteo.com
# Author Samuel BOVEE <samuel@ulteo.com> 2010
# Author Julien LANGLOIS <julien@ulteo.com> 2011, 2013
# Author David PHAM-VAN <d.pham-van@ulteo.com> 2013
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; version 2
# of the License
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

import os
import re
import sys
import time
from subprocess import call

path = os.path.dirname( os.path.realpath( __file__ ) )

# Detect the version
if os.environ.has_key("OVD_VERSION"):
	version = os.environ["OVD_VERSION"]
else:
	version = file("VERSION", "r").readline().strip()
	version += "~dev"

version_strict = ".".join([p for p in (re.split("[^\d\.]", version)[0]+".0"*4).split(".")  if p.isdigit()][:4])

transform_files = []
if sys.platform == "linux2":
	transform_files.append("configure.ac")
elif sys.platform == "win32":
	transform_files.append("ressources.rc")
else:
	raise Exception("No supported platform")


for name in transform_files:
	f = file(os.path.join(path, name+".in"), "r")
	content = f.read()
	f.close()
	
	content = content.replace("@VERSION@", version)
	content = content.replace("@VERSION_STYLE_C@", version_strict.replace(".", ","))
	content = content.replace("@YEAR@", time.strftime("%Y"))
	
	f = file(os.path.join(path, name), "w")
	f.write(content)
	f.close()



if sys.platform == "linux2":
	ret = call(['autoreconf', '-vfi'], cwd=path)
	if ret is 0:
		ret = call(['./configure'] + sys.argv[1:], cwd=path)
	if ret is not 0:
		sys.exit(ret)
else:
	import shutil
	shutil.copyfile("Makefile.WIN32", "Makefile")
